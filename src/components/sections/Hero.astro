---
import { basics } from "@cv";
import Section from "@/components/Section.astro";
import Mail from "@/icons/Email.astro";
import LinkedIn from "@/icons/Linkedin.astro";
import GitHub from "@/icons/GitHub.astro";
import Address from "@/icons/Address.astro";
import type { SocialIcon } from "@/types";

const { name, label, image, location, profiles, email } = basics;
const { city, region } = location;

const SOCIAL_ICONS: SocialIcon = {
  GitHub,
  LinkedIn,
};

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn");
const linkedUrl = linkedInfo?.url;
const gitHubInfo = profiles.find(({ network }) => network === "GitHub");
const gitHubUrl = gitHubInfo?.url;

const printInfo = [gitHubUrl, linkedUrl].filter(Boolean).join(" â€¢ ");
---

<Section>
  <div class="container-card">
    <div class="info">
      <h1>{name}</h1>
      <h2 class="description-text">{label}</h2>
      <span class="location">
        <Address />
        {city}, {region}
      </span>
      <span class="email">
        <Mail />
        {email}
      </span>
      <footer class="print">
        {printInfo}
      </footer>
      <footer class="no-print">
        {
          profiles.map(({ network, url }) => {
            const Icon = SOCIAL_ICONS[network];

            return (
              <a
                href={url}
                title={`Visitar el perfil de ${name} en ${network}`}
                target="_blank"
              >
                <Icon />
              </a>
            );
          })
        }
      </footer>
    </div>
    <figure class="profile-pic">
      <img src={image} alt={`Foto de perfil de ${name}`} id="profile-image" />
    </figure>
  </div>
</Section>

<style>
  .container-card {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
    padding: 2rem;
    border-radius: 20px;
    background: linear-gradient(to bottom right, #fdfdfd, #f0f0f0);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .container-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 600px;
  }

  h1 {
    font-size: 2.8rem;
    font-weight: 700;
    color: #111;
    margin: 0;
  }

  h2 {
    color: #444;
    font-weight: 500;
    font-size: 1.4rem;
    margin: 0;
  }

  .location {
    margin-bottom: 0.5rem;
  }

  .email {
    margin-top: -1rem;
  }

  .location,
  .email {
    color: #555;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.1rem;
  }

  .profile-pic {
    align-self: flex-start;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 180px;
    height: 180px;
    border-radius: 50%;
    border: 4px solid #e9ecef;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  footer.print {
    color: #777;
    font-size: 0.85rem;
    display: none;
  }

  footer.no-print {
    display: flex;
    gap: 14px;
    margin-top: 1rem;
  }

  footer.no-print a {
    color: #444;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    transition: all 0.3s ease-in-out;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
  }

  footer.no-print a:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    background: linear-gradient(to right, #007bff, #035fc2);
    color: #fff;
  }

  @media (max-width: 700px) {
    .container-card {
      flex-direction: column-reverse;
      align-items: center;
      text-align: center;
      padding: 1.5rem;
    }

    .info {
      align-items: center;
      max-width: 100%;
    }

    .profile-pic {
      margin: 1rem 0;
    }

    footer.print {
      display: block;
    }
  }

  .profile-pic {
    align-self: flex-start;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 180px;
    height: 180px;
    border-radius: 50%;
    border: 4px solid #e9ecef;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    transition: transform 0.6s ease;
  }

  @keyframes rotateImage {
    0% {
      transform: rotateY(0);
    }
    100% {
      transform: rotateY(360deg);
    }
  }

  img.rotate {
    animation: rotateImage 1s ease;
  }
</style>

<script>
  const profileImage = document.getElementById("profile-image");
  if (profileImage) {
    profileImage.addEventListener("click", () => {
      const image = document.getElementById("profile-image");
      if (image) {
        image.classList.add("rotate");
      }

      setTimeout(() => {
        if (image) {
          image.classList.remove("rotate");
        }
      }, 1000);
    });
  }
</script>
